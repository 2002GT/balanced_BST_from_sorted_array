// ---BST by sorted array-------------------------


#include "bits/stdc++.h"
using namespace std;

 struct Node{
     int data;
     Node*left;
     Node*right;
     
      Node(int val){
         data = val;
         left= NULL;
         right= NULL;
     }
 };
 

Node*sorted_array_to_BST(int arr[] , int start, int end){

// base case--
if(start > end){
    return NULL;
}

int mid = (start+end)/2;

Node*root = new Node(arr[mid]);

root->left = sorted_array_to_BST(arr,start, mid-1);

root->right = sorted_array_to_BST(arr, mid+1, end);

return root;
}
//   preorder-----------------

 void preorder_print(Node*root){
     if(root == NULL){
         return ;
     }
     cout<<root->data<<" ";
     preorder_print(root->left);
     preorder_print(root->right);
 }


 int main()
{
    
int arr[] = {10, 20, 30 , 40 , 50};
Node*root = sorted_array_to_BST(arr, 0, 4);

 preorder_print(root);
 cout<<endl;
 return 0;
}
.
